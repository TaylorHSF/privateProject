{"version":3,"sources":["pages/home/index.js","pages/ocr/index.js","routes.js","pages/idScan/index.js","index.js"],"names":["Home","history","className","name","icon","route","map","nav","onClick","push","pathname","src","Ocr","useState","video","setVideo","setupCamera","a","navigator","mediaDevices","getUserMedia","Error","videoObj","document","getElementById","width","height","audio","facingMode","stream","srcObject","Promise","resolve","onloadedmetadata","loadVideo","play","useEffect","console","log","pause","id","routes","path","exact","component","ReactDOM","render","StrictMode","renderRoutes"],"mappings":"0QA+BeA,G,MA3BF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAUd,OACE,qBAAKC,UAAU,OAAf,SAVW,CACX,CAAEC,KAAM,2BAAQC,KAAM,WAAYC,MAAO,QACzC,CAAEF,KAAM,iCAASC,KAAM,cAAeC,MAAO,YASrCC,KAAI,SAACC,GAAD,OACR,sBAEEC,QAAS,WAVC,IAACH,IAWCE,EAAIF,MAVpBJ,EAAQQ,KAAK,CACXC,SAAUL,KAMV,UAME,8BAAME,EAAIJ,OACV,qBAAKQ,IAAKJ,EAAIH,SANTG,EAAIJ,a,+BC6DJS,G,MAtEH,WAAO,IAAD,EACUC,qBADV,mBACTC,EADS,KACFC,EADE,KAEVC,EAAW,uCAAG,8BAAAC,EAAA,yDACbC,UAAUC,cAAiBD,UAAUC,aAAaC,aADrC,sBAEV,IAAIC,MAAM,iEAFA,cAKZC,EAAWC,SAASC,eAAe,SACzCT,EAASO,GACTA,EAASG,MAdM,IAefH,EAASI,OAdO,IAME,SAUGR,UAAUC,aAAaC,aAAa,CACvDO,OAAO,EACPb,MAAO,CACLc,WAAY,OACZH,MArBW,IAsBXC,OArBY,OAME,cAUZG,EAVY,OAkBlBP,EAASQ,UAAYD,EAlBH,kBAmBX,IAAIE,SAAQ,SAACC,GAClBV,EAASW,iBAAmB,WAC1BD,EAAQV,QArBM,4CAAH,qDA0BXY,EAAS,uCAAG,sBAAAjB,EAAA,sEACOD,IADP,cAEPmB,OAFO,2CAAH,qDA6Bf,OAVAC,qBAAU,WAER,OADAF,IACO,WAEDpB,IACFuB,QAAQC,IAAIxB,EAAO,aACnBA,EAAMyB,YAGT,CAACzB,IAEF,qBAAKZ,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,+BAEE,uBAAOsC,GAAG,QAAV,SACE,mCCjDKC,G,MAhBA,CACb,CACEC,KAAM,IACNC,OAAM,EACNC,UAAW5C,GAEb,CACE0C,KAAM,OACNE,UAAWhC,GAEb,CACE8B,KAAM,UACNE,UCTW,WACb,IAAM5B,EAAW,uCAAG,8BAAAC,EAAA,yDACbC,UAAUC,cAAiBD,UAAUC,aAAaC,aADrC,sBAEV,IAAIC,MAAM,iEAFA,cAKZP,EAAQS,SAASC,eAAe,UAChCC,MAZS,IAafX,EAAMY,OAZU,IAKE,SASGR,UAAUC,aAAaC,aAAa,CACvDO,OAAO,EACPb,MAAO,CACLc,WAAY,OACZH,MAnBW,IAoBXC,OAnBY,OAKE,cASZG,EATY,OAiBlBf,EAAMgB,UAAYD,EAjBA,kBAmBX,IAAIE,SAAQ,SAACC,GAClBlB,EAAMmB,iBAAmB,WACvBD,EAAQlB,QArBM,4CAAH,qDA0BXoB,EAAS,uCAAG,4BAAAjB,EAAA,sEACID,IADJ,cACVF,EADU,QAEVqB,OAFU,kBAGTrB,GAHS,2CAAH,qDAuBf,OAHAsB,qBAAU,WACRF,MACC,IAED,qBAAKhC,UAAU,SAAf,SACE,yBAAQA,UAAU,aAAlB,+BAEE,uBAAOsC,GAAG,QAAV,SACE,qCCvDVK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UAASC,YAAaP,OAExBlB,SAASC,eAAe,W","file":"static/js/main.a9dff728.chunk.js","sourcesContent":["/** @format */\nimport React, { useEffect } from 'react';\nimport './index.css';\n\nconst Home = ({ history }) => {\n  const navs = [\n    { name: '文字识别', icon: 'ocr-icon', route: '/ocr' },\n    { name: '身份证扫码', icon: 'idScan-icon', route: '/idScan' },\n  ];\n  const handleNav = (route) => {\n      history.push({\n        pathname: route,\n      });\n  };\n  return (\n    <div className=\"Home\">\n      {navs.map((nav) => (\n        <div\n          key={nav.name}\n          onClick={() => {\n            handleNav(nav.route);\n          }}\n        >\n          <div>{nav.name}</div>\n          <img src={nav.icon}></img>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Home;\n","/** @format */\nimport React, { useEffect, useState } from 'react';\nimport './index.css';\n\nconst videoWidth = 400;\nconst videoHeight = 720;\nconst canvasWidth = 320;\nconst canvasHeight = 180;\n\nconst Ocr = () => {\n  const [video, setVideo] = useState();\n  const setupCamera = async () => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      throw new Error('Browser API navigator.mediaDevices.getUserMedia not available');\n    }\n\n    const videoObj = document.getElementById('video');\n    setVideo(videoObj);\n    videoObj.width = videoWidth;\n    videoObj.height = videoHeight;\n\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: false,\n      video: {\n        facingMode: 'user',\n        width: videoWidth,\n        height: videoHeight,\n      },\n    });\n    videoObj.srcObject = stream;\n    return new Promise((resolve) => {\n      videoObj.onloadedmetadata = () => {\n        resolve(videoObj);\n      };\n    });\n  };\n\n  const loadVideo = async () => {\n    const videoObj = await setupCamera();\n    videoObj.play();\n  };\n  const getGestureRes = (video) => {\n    const canvas = document.getElementById('video-canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = canvasWidth;\n    canvas.height = canvasHeight;\n    const drawImgByFrame = () => {\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n      ctx.save();\n      ctx.drawImage(video, 0, 0, canvasWidth, canvasHeight);\n      ctx.restore();\n      requestAnimationFrame(drawImgByFrame);\n    };\n    drawImgByFrame();\n  };\n\n  useEffect(() => {\n    loadVideo();\n    return () => {\n      // const videoObj = document.getElementById('video');\n      if (video) {\n        console.log(video, 'hsf leave');\n        video.pause();\n      }\n    };\n  }, [video]);\n  return (\n    <div className=\"ocr\">\n      <header className=\"App-header\">\n        start ai h5 coding\n        <video id=\"video\">\n          <track />\n        </video>\n        {/* <canvas id=\"video-canvas\" /> */}\n      </header>\n    </div>\n  );\n};\n\nexport default Ocr;\n","/** @format */\n\nimport Home from './pages/home';\nimport Ocr from './pages/ocr';\nimport IdScan from './pages/idScan';\n\nconst routes = [\n  {\n    path: '/',\n    exact:true,\n    component: Home,\n  },\n  {\n    path: '/ocr',\n    component: Ocr,\n  },\n  {\n    path: '/idScan',\n    component: IdScan,\n  },\n];\n\nexport default routes;\n","/** @format */\nimport React, { useEffect } from 'react';\nimport './index.css';\n\nconst videoWidth = 400;\nconst videoHeight = 720;\nconst canvasWidth = 320;\nconst canvasHeight = 180;\n\nconst IdScan = () => {\n  const setupCamera = async () => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      throw new Error('Browser API navigator.mediaDevices.getUserMedia not available');\n    }\n\n    const video = document.getElementById('video');\n    video.width = videoWidth;\n    video.height = videoHeight;\n\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: false,\n      video: {\n        facingMode: 'user',\n        width: videoWidth,\n        height: videoHeight,\n      },\n    });\n    video.srcObject = stream;\n\n    return new Promise((resolve) => {\n      video.onloadedmetadata = () => {\n        resolve(video);\n      };\n    });\n  };\n\n  const loadVideo = async () => {\n    const video = await setupCamera();\n    video.play();\n    return video;\n  };\n  const getGestureRes = (video) => {\n    const canvas = document.getElementById('video-canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = canvasWidth;\n    canvas.height = canvasHeight;\n    const drawImgByFrame = () => {\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n      ctx.save();\n      ctx.drawImage(video, 0, 0, canvasWidth, canvasHeight);\n      ctx.restore();\n      requestAnimationFrame(drawImgByFrame);\n    };\n    drawImgByFrame();\n  };\n\n  useEffect(() => {\n    loadVideo();\n  }, []);\n  return (\n    <div className=\"idScan\">\n      <header className=\"App-header\">\n        start ai h5 coding\n        <video id=\"video\">\n          <track />\n        </video>\n        {/* <canvas id=\"video-canvas\" /> */}\n      </header>\n    </div>\n  );\n};\n\nexport default IdScan;\n","/** @format */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { renderRoutes } from 'react-router-config';\nimport { HashRouter as Router } from 'react-router-dom';\nimport routes from './routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>{renderRoutes(routes)}</Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}